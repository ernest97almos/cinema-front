import { useEffect, useState } from 'react';
import './App.css';

// –¢–≤–æ–π –±–µ–∫–µ–Ω–¥ URL
const API_URL = 'https://cinema-ifslutv.onrender.com/api';

export default function App() {
  const [movies, setMovies] = useState([]);
  const [selectedMovie, setSelectedMovie] = useState(null);
  const [bookings, setBookings] = useState([]);
  const [bookingData, setBookingData] = useState({
    email: '',
    seat_number: ''  // –ò—Å–ø–æ–ª—å–∑—É—é seat_number –∫–∞–∫ –≤ —Ç–≤–æ—ë–º –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
  });

  // 1. GET /movies - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ–∏–ª—å–º—ã
  useEffect(() => {
    fetch(`${API_URL}/movies/`)
      .then(response => response.json())
      .then(data => setMovies(data))
      .catch(error => console.error('Error:', error));
  }, []);

  // 2. GET /bookings/{movie_id} - –ø–æ–ª—É—á–∏—Ç—å –±—Ä–æ–Ω–∏ –ø–æ ID —Ñ–∏–ª—å–º–∞
  const fetchBookings = (movieId) => {
    fetch(`${API_URL}/bookings/${movieId}`)
      .then(response => response.json())
      .then(data => {
        setBookings(data);
        setSelectedMovie(movieId);
      })
      .catch(error => console.error('Error:', error));
  };

  // 3. POST /bookings/ - —Å–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω—å
  const createBooking = (e) => {
    e.preventDefault();
    if (!selectedMovie) return alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º');

    const bookingPayload = {
      movie_id: selectedMovie,
      seat_id: parseInt(bookingData.seat_number),  // seat_id –∫–∞–∫ –≤ —Ç–≤–æ–µ–π —Å—Ö–µ–º–µ
      email: bookingData.email
    };

    fetch(`${API_URL}/bookings/`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(bookingPayload)
    })
    .then(response => {
      if (!response.ok) throw new Error('Booking failed');
      return response.json();
    })
    .then(data => {
      alert('–ú–µ—Å—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ!');
      setBookingData({ email: '', seat_number: '' });
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π
      fetchBookings(selectedMovie);
    })
    .catch(error => {
      console.error('Error:', error);
      alert('–û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ' + error.message);
    });
  };

  return (
    <div className="app">
      <h1>üé¨ Cinema Booking System</h1>
      
      {/* –°–µ–∫—Ü–∏—è 1: –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ */}
      <div className="section">
        <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å–º—ã</h2>
        <div className="movies-list">
          {movies.map(movie => (
            <div 
              key={movie.id} 
              className={`movie-card ${selectedMovie === movie.id ? 'selected' : ''}`}
              onClick={() => fetchBookings(movie.id)}
            >
              <h3>{movie.title}</h3>
              <p>–ñ–∞–Ω—Ä: {movie.genre}</p>
              <p>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {movie.duration}</p>
              <p>–†–µ–π—Ç–∏–Ω–≥: {movie.imdb_rating}</p>
            </div>
          ))}
        </div>
      </div>

      {/* –°–µ–∫—Ü–∏—è 2: –§–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <div className="section">
        <h2>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞</h2>
        <form onSubmit={createBooking} className="booking-form">
          <input
            type="email"
            placeholder="–í–∞—à email"
            value={bookingData.email}
            onChange={(e) => setBookingData({...bookingData, email: e.target.value})}
            required
          />
          <input
            type="number"
            placeholder="–ù–æ–º–µ—Ä –º–µ—Å—Ç–∞"
            value={bookingData.seat_number}
            onChange={(e) => setBookingData({...bookingData, seat_number: e.target.value})}
            required
            min="1"
          />
          <button type="submit" disabled={!selectedMovie}>
            –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
          </button>
        </form>
        {!selectedMovie && <p className="hint">‚Üë –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ</p>}
      </div>

      {/* –°–µ–∫—Ü–∏—è 3: –°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π */}
      <div className="section">
        <h2>–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞ {selectedMovie && `–¥–ª—è —Ñ–∏–ª—å–º–∞ ID: ${selectedMovie}`}</h2>
        {bookings.length > 0 ? (
          <div className="bookings-grid">
            {bookings.map(booking => (
              <div key={booking.id} className="booking-card">
                <p><strong>–ú–µ—Å—Ç–æ:</strong> {booking.seat_id}</p>
                <p><strong>Email:</strong> {booking.email}</p>
                <p><strong>–î–∞—Ç–∞:</strong> {new Date(booking.booking_date).toLocaleString()}</p>
              </div>
            ))}
          </div>
        ) : (
          <p>–ù–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç</p>
        )}
      </div>
    </div>
  );
}